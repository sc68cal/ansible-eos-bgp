! templates/bgp_neighbors.j2
#jinja2: trim_blocks: False
#jinja2: lstrip_blocks: False

{% set bgp_as = bgp.bgp_as %}

{# pull in any missing default parameters for bgp neighbors by updating
{# the default dictionary with the input dictionary, then assigning
{# it back to the bgp neighbor variable #}
{% set dump = neighbor_defaults.update(item) %}
{% set neighbor = neighbor_defaults %}

{% set name = neighbor.name %}

{# enter the bgp configuration block #}

router bgp {{ bgp_as }}

{# configure the neighbor information #}

{# configure neighbor remote-as #}
{% if neighbor.remote_as is defined %}

   neighbor {{ name }} remote-as {{ neighbor.remote_as }}

{% endif %}

{# configure neighbor peer-group #}
{% if neighbor.peer_group is defined %}

   neighbor {{ name }} peer-group {{ neighbor.peer_group }}

{% endif %}

{# configure neighbor send-community #}
{% if neighbor.send_community is defined and neighbor.send_community %}

   neighbor {{ name }} send-community

{% endif %}

{# configure neighbor next-hop-self #}
{% if neighbor.next_hop_self is defined and neighbor.next_hop_self %}

   neighbor {{ name }} next-hop-self

{% endif %}

{# configure neighbor route-reflector-client #}
{% if neighbor.route_reflector_client is defined and neighbor.route_reflector_client %}

    neighbor {{ name }} route-reflector-client

{% endif %}

{# configure neighbor BFD failure detection #}
{% if neighbor.fall_over_bfd is defined and neighbor.fall_over_bfd %}

   neighbor {{ name }} fall-over bfd

{% endif %}

{# configure neighbor route-map in #}
{% if neighbor.route_map_in is defined %}

   neighbor {{ name }} route-map {{ neighbor.route_map_in }} in

{% endif %}

{# configure neighbor route-map out #}
{% if neighbor.route_map_out is defined %}

   neighbor {{ name }} route-map {{ neighbor.route_map_out }} out

{% endif %}

{# configure neighbor description #}
{% if neighbor.description is defined %}

   neighbor {{ name }} description {{ neighbor.description }}

{% endif %}

{# configure allowas-in #}
{% if neighbor.allowas_in is defined and neighbor.allowas_in %}

   neighbor {{ name }} allowas-in {{ neighbor.allowas_in_asn_quantity | default("") }}

{% endif %}

{# configure neighbor shutdown state #}
{% if neighbor.enable %}

   no neighbor {{ name }} shutdown

{% endif %}
